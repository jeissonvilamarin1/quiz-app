{"version":3,"sources":["Questionario.js","styles/CardQuestion.jsx","components/Question.jsx","components/Home.js","components/About.js","components/NavBar.js","containers/App.js","index.js"],"names":["questionGeek","question","a","b","c","d","correct","DivForm","styled","div","FormStyle","Form","Titulo","h2","RadioStyle","Check","ButtonStyle","Button","Question","handleSubmit","e","preventDefault","target","reset","state","answerSelect","setState","score","numberQuestion","length","componentDidMount","console","log","onChanged","currentTarget","value","currentQuizData","this","onSubmit","Group","className","controlId","style","padding","type","label","name","id","onChange","variant","onClick","textAlign","Component","Home","ContainerStyle","Image","src","rounded","width","to","About","NavBar","Nav","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a53e16b.chunk.js","sourcesContent":["export const questionHarryPotter = [\r\n  {\r\n    question: \"¿Qué hechizo usó Harry para matar a Lord Voldemort?\",\r\n    a: \"Expelliarmus\",\r\n    b: \"Expecto Patronum\",\r\n    c: \"Avada Kedavra\",\r\n    d: \"Accio\",\r\n    correct: \"Expelliarmus\",\r\n  },\r\n  {\r\n    question: \"Es Levi-O-sa, no ...\",\r\n    a: \"LEVI-o-sa\",\r\n    b: \"Levi-O-sa\",\r\n    c: \"Levi-o-SA\",\r\n    d: \"LEVI-o-SA\",\r\n    correct: \"Levi-o-SA\",\r\n  },\r\n  {\r\n    question: \"Cuando se desentierra, ¿qué hará una mandrágora?\",\r\n    a: \"Baile\",\r\n    b: \"Eructo\",\r\n    c: \"Reir\",\r\n    d: \"Gritar\",\r\n    correct: \"Gritar\",\r\n  },\r\n  {\r\n    question:\r\n      \"En Harry Potter, ¿Qué hechizo debes conjurar para arreglar unas gafas?\",\r\n    a: \"Oculus reparo\",\r\n    b: \"Oculo reparat\",\r\n    c: \"Glafulus arreglo\",\r\n    d: \"Reparat ojus\",\r\n    correct: \"Oculus reparo\",\r\n  },\r\n  {\r\n    question: \"¿En qué posición juega Harry en su equipo de Quidditch?\",\r\n    a: \"Cazador\",\r\n    b: \"Buscador\",\r\n    c: \"Bludger\",\r\n    d: \"Guardián\",\r\n    correct: \"Buscador\",\r\n  },\r\n  {\r\n    question: \"¿Cómo se llamaba el elfo doméstico de la familia Black?\",\r\n    a: \"Dobby\",\r\n    b: \"Winky\",\r\n    c: \"Kreacher\",\r\n    d: \"hockey\",\r\n    correct: \"Kreacher\",\r\n  },\r\n];\r\nexport const questionGames = [\r\n  {\r\n    question: \"En Assassins Creed, 'Nada es verdad...'\",\r\n    a: \"salvo algunas cosas\",\r\n    b: \"hasta que se hace realidad\",\r\n    c: \"aunque en realidad si\",\r\n    d: \"todo está permitido\",\r\n    correct: \"todo está permitido\",\r\n  },\r\n  {\r\n    question: \"¿Cómo se llama el hermano de Mario Bros?\",\r\n    a: \"Luigi\",\r\n    b: \"Mario Jr\",\r\n    c: \"Tony\",\r\n    d: \"Honguito\",\r\n    correct: \"Luigi\",\r\n  },\r\n  {\r\n    question: \"¿Cómo se llama el enemigo de Sonic?\",\r\n    a: \"Dr. Malo\",\r\n    b: \"Robotech\",\r\n    c: \"Tails\",\r\n    d: \"Dr. Robotnik\",\r\n    correct: \"Dr. Robotnik\",\r\n  },\r\n  {\r\n    question: \"¿Cómo se llama la ciudad en la que desenvuelve Resident Evil?\",\r\n    a: \"New York\",\r\n    b: \"Raccoon City\",\r\n    c: \"Metrópolis\",\r\n    d: \"Gotam City\",\r\n    correct: \"Raccoon City\",\r\n  },\r\n  {\r\n    question: \"¿Como se llama la protagonista de la saga de Tom Raider\",\r\n    a: \"Jill Valentine\",\r\n    b: \"Samus Aran\",\r\n    c: \"Lara Croft\",\r\n    d: \"Aloy\",\r\n    correct: \"Lara Croft\",\r\n  },\r\n  {\r\n    question: \"¿Que lenguaje de programación se utilizó  para crear Minecraft?\",\r\n    a: \"c++\",\r\n    b: \"python\",\r\n    c: \"php\",\r\n    d: \"java\",\r\n    correct: \"java\",\r\n  },\r\n];\r\nexport const questionGeek = [\r\n  {\r\n    question: \"¿De qué metal están hechas las garras de Wolverine?\",\r\n    a: \"Aluminio\",\r\n    b: \"Vibranium\",\r\n    c: \"Acero\",\r\n    d: \"Adamantium\",\r\n    correct: \"Adamantium\",\r\n  },\r\n  {\r\n    question: \"¿Qué hechizo usó Harry para matar a Lord Voldemort?\",\r\n    a: \"Expelliarmus\",\r\n    b: \"Expecto Patronum\",\r\n    c: \"Avada Kedavra\",\r\n    d: \"Accio\",\r\n    correct: \"Expelliarmus\",\r\n  },\r\n  {\r\n    question: \"Un anillo...\",\r\n    a: \"para liberarlos a todos\",\r\n    b: \"para llamarlos a todos\",\r\n    c: \"para gobernarlos a todos\",\r\n    d: \"para destruirlos\",\r\n    correct: \"para gobernarlos a todos\",\r\n  },\r\n  {\r\n    question: \"En Assassins Creed, 'Nada es verdad...'\",\r\n    a: \"salvo algunas cosas\",\r\n    b: \"hasta que se hace realidad\",\r\n    c: \"aunque en realidad si\",\r\n    d: \"todo está permitido\",\r\n    correct: \"todo está permitido\",\r\n  },\r\n  {\r\n    question: \"¿En qué posición juega Harry en su equipo de Quidditch?\",\r\n    a: \"Cazador\",\r\n    b: \"Buscador\",\r\n    c: \"Bludger\",\r\n    d: \"Guardián\",\r\n    correct: \"Buscador\",\r\n  },\r\n  {\r\n    question: \"¿Cómo se llama el hermano de Mario Bros?\",\r\n    a: \"Luigi\",\r\n    b: \"Mario Jr\",\r\n    c: \"Tony\",\r\n    d: \"Honguito\",\r\n    correct: \"Luigi\",\r\n  },\r\n  {\r\n    question: \"¿Qué talento mágico comparte Harry con Voldemort?\",\r\n    a: \"Ser un animago\",\r\n    b: \"Ser un hablante de pársel\",\r\n    c: \"Ser un auror\",\r\n    d: \"Ser un mortífago\",\r\n    correct: \"Ser un hablante de pársel\",\r\n  },\r\n  {\r\n    question: \"¿Cómo se llama el enemigo de Sonic?\",\r\n    a: \"Dr. Malo\",\r\n    b: \"Robotech\",\r\n    c: \"Tails\",\r\n    d: \"Dr. Robotnik\",\r\n    correct: \"Dr. Robotnik\",\r\n  },\r\n  {\r\n    question: \"¿Cómo se llama la ciudad en la que desenvuelve Resident Evil?\",\r\n    a: \"New York\",\r\n    b: \"Raccoon City\",\r\n    c: \"Metrópolis\",\r\n    d: \"Gotam City\",\r\n    correct: \"Raccoon City\",\r\n  },\r\n  {\r\n    question: \"¿Como se llama la protagonista de la saga de Tom Raider\",\r\n    a: \"Jill Valentine\",\r\n    b: \"Samus Aran\",\r\n    c: \"Lara Croft\",\r\n    d: \"Aloy\",\r\n    correct: \"Lara Croft\",\r\n  },\r\n  {\r\n    question: \"¿A que se le considera 'lag' en un video juego?\",\r\n    a: \"Conexión mala/inestable de internet\",\r\n    b: \"Bajadas abruptas de FPS\",\r\n    c: \"Baja carga gráfica de un video juego\",\r\n    d: \"Caerse del servidor\",\r\n    correct: \"Conexión mala/inestable de internet\",\r\n  },\r\n  {\r\n    question: \"Es Levi-O-sa, no ...\",\r\n    a: \"LEVI-o-sa\",\r\n    b: \"Levi-O-sa\",\r\n    c: \"Levi-o-SA\",\r\n    d: \"LEVI-o-SA\",\r\n    correct: \"Levi-o-SA\",\r\n  },\r\n  {\r\n    question: \"Cuando se desentierra, ¿qué hará una mandrágora?\",\r\n    a: \"Baile\",\r\n    b: \"Eructo\",\r\n    c: \"Reir\",\r\n    d: \"Gritar\",\r\n    correct: \"Gritar\",\r\n  },\r\n];\r\n","import { Form, Button } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const DivForm = styled.div`\r\n  background-image: linear-gradient(315deg, #b8c6db 0%, #f5f7fa 100%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n`;\r\nexport const FormStyle = styled(Form)`\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.1);\r\n  width: 600px;\r\n`;\r\nexport const Titulo = styled.h2`\r\n  padding: 1rem;\r\n  text-align: center;\r\n  margin: 0;\r\n`;\r\nexport const RadioStyle = styled(Form.Check)`\r\n  padding: 0;\r\n  font-size: 1.2rem;\r\n  margin: 1rem 0;\r\n`;\r\nexport const ButtonStyle = styled(Button)`\r\n  background-color: #8e44ad;\r\n  border: none;\r\n  width: 100%;\r\n  font-size: 1.1rem;\r\n  padding: 1.3rem;\r\n  &:hover {\r\n    background-color: #732d91;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #5e3370;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { questionGeek } from \"../Questionario\";\r\nimport {\r\n  ButtonStyle,\r\n  DivForm,\r\n  FormStyle,\r\n  RadioStyle,\r\n  Titulo,\r\n} from \"../styles/CardQuestion\";\r\n\r\nexport default class Question extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      numberQuestion: 0,\r\n      question: {\r\n        question: \"\",\r\n        a: \"\",\r\n        b: \"\",\r\n        c: \"\",\r\n        d: \"\",\r\n        correct: \"\",\r\n      },\r\n      score: 0,\r\n      answerSelect: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentQuizData = questionGeek[this.state.numberQuestion];\r\n\r\n    this.setState({\r\n      question: {\r\n        question: currentQuizData.question,\r\n        a: currentQuizData.a,\r\n        b: currentQuizData.b,\r\n        c: currentQuizData.c,\r\n        d: currentQuizData.d,\r\n        correct: currentQuizData.correct,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    if (this.state.answerSelect === this.state.question.correct) {\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n      });\r\n    }\r\n    if (this.state.numberQuestion < questionGeek.length) {\r\n      this.componentDidMount();\r\n    } else {\r\n      console.log(this.state.score);\r\n    }\r\n  };\r\n\r\n  onChanged = (e) => {\r\n    this.setState({\r\n      answerSelect: e.currentTarget.value\r\n    });\r\n    console.log(this.answerSelect)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DivForm>\r\n        <FormStyle onSubmit={this.handleSubmit}>\r\n          <Form.Group\r\n            className=\"mb-3\"\r\n            controlId=\"control-radio\"\r\n            style={{ padding: \"4rem\" }}\r\n          >\r\n            <Titulo>{this.state.question.question}</Titulo>\r\n            <RadioStyle\r\n              type=\"radio\"\r\n              label={this.state.question.a}\r\n              value={this.state.question.a}\r\n              name={\"respuestas\"}\r\n              id={`respuesta1`}\r\n              onChange={this.onChanged}\r\n            />\r\n            <RadioStyle\r\n              type=\"radio\"\r\n              label={this.state.question.b}\r\n              value={this.state.question.b}\r\n              name={\"respuestas\"}\r\n              id={`respuesta2`}\r\n              onChange={this.onChanged}\r\n            />\r\n            <RadioStyle\r\n              type=\"radio\"\r\n              label={this.state.question.c}\r\n              value={this.state.question.c}\r\n              name={\"respuestas\"}\r\n              id={`respuesta3`}\r\n              onChange={this.onChanged}\r\n            />\r\n            <RadioStyle\r\n              type=\"radio\"\r\n              label={this.state.question.d}\r\n              value={this.state.question.d}\r\n              name={\"respuestas\"}\r\n              id={`respuesta4`}\r\n              onChange={this.onChanged}\r\n            />\r\n          </Form.Group>\r\n          <ButtonStyle\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              this.setState({ numberQuestion: this.state.numberQuestion + 1 });\r\n            }}\r\n          >\r\n            Enviar\r\n          </ButtonStyle>\r\n          <h2 style={{ textAlign: \"center\" }}>\r\n            {this.state.score}/{questionGeek.length}{\" \"}\r\n          </h2>\r\n        </FormStyle>\r\n      </DivForm>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { DivForm } from \"../styles/CardQuestion\";\r\nimport styled from \"styled-components\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    const ContainerStyle = styled.div`\r\n      background-color: #fff;\r\n      border-radius: 10px;\r\n      box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.1);\r\n      width: 80%;\r\n      padding: 4rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `;\r\n    return (\r\n      <DivForm>\r\n        <ContainerStyle>\r\n          <h2>Inicio</h2>\r\n          <p>\r\n            {`Realiza este cuestionario para descrubir que tan friki eres, encontrarás preguntas de video juegos y de peliculas que un friki de corazón ha visto más de 2 veces.`}\r\n          </p>\r\n          <Image\r\n            src=\"https://www.pngkit.com/png/full/192-1923288_octocat-github-logo-transparent-octdrey-catburn.png\"\r\n            rounded\r\n            width=\"250px\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n          <Link to=\"/question\" className=\"nav-link\">\r\n            Comienza el formulario aquí\r\n          </Link>\r\n        </ContainerStyle>\r\n      </DivForm>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { DivForm } from \"../styles/CardQuestion\";\r\nimport styled from \"styled-components\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    const ContainerStyle = styled.div`\r\n      background-color: #fff;\r\n      border-radius: 10px;\r\n      box-shadow: 0 0 10px 2px rgba(100, 100, 100, 0.1);\r\n      width: 80%;\r\n      padding: 4rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    `;\r\n    return (\r\n      <DivForm>\r\n        <ContainerStyle>\r\n          <h2>Sobre este formulario</h2>\r\n          <p>\r\n            {`El 25 de mayo se celebra el Día del Orgullo Friki en nuestro país. Una celebración surgida en 2006 en Internet y que congrega a toda una comunidad, a priori minoritaria, que no se avergüenza en absoluto de celebrar con orgullo que son frikis.\r\n                        Gamers, geeks, freaks, weirdos y demás miembros de esta comunidad tiene la oportunidad cada 25 de mayo de mostrar al mundo que ser friki es algo por lo que merece la pena sentirse orgulloso. Y es que, aunque muchos no lo reconozcan, todos tenemos un 'friki' interior, en mayor o menor medida, con el que nos sentimos bien -incluso orgullosos- y del que renegar es tan absurdo como poco sano.\r\n                        Por ello y porque queremos unirnos a esta divertida celebración, hemos elaborado este friki-test con el fin de que compartáis con orgullo aquello que gritáis a los cuatro vientos: ¡Soy Friki!`}\r\n          </p>\r\n          <Image\r\n            src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--cYgHri3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/lepok0cc608byz1aq139.png\"\r\n            rounded\r\n            width=\"250px\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        </ContainerStyle>\r\n      </DivForm>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Nav>\r\n        <Link to=\"/\" className=\"nav-link\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/question\" className=\"nav-link\">\r\n          Cuestionario friki\r\n        </Link>\r\n        <Link to=\"/about\" className=\"nav-link\">\r\n          Sobre el formulario\r\n        </Link>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Question from \"../components/Question\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"../components/Home\";\nimport About from \"../components/About\";\nimport NavBar from \"../components/NavBar\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/question\" element={<Question />} />\n        <Route path=\"/about\" element={<About />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}